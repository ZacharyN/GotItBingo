"""
Django settings for bingoCards project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
from decouple import config
from django.contrib.messages import constants as messages
import mimetypes

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# General Configuration
SECRET_KEY = config('SECRET_KEY')
ENVIRONMENT = config('DJANGO_ENV')
PASSWORD_RESET_TIMEOUT = 3600  # 1 hour


# Debug and Allowed Hosts
if ENVIRONMENT == 'development':
    DEBUG = True
    ALLOWED_HOSTS = ['localhost', '127.0.0.1']
    CORS_ALLOW_ALL_ORIGINS = True
    CSRF_TRUSTED_ORIGINS = ['http://localhost:5173']
elif ENVIRONMENT == 'test':
    DEBUG = True
    ALLOWED_HOSTS = ['icsmanager.ncffapps.dev']
elif ENVIRONMENT == 'production':
    DEBUG = False
    ALLOWED_HOSTS = ['icsmanager.communityportals.org']


# Security Configuration
CSRF_COOKIE_SECURE = ENVIRONMENT != 'development'
CSRF_USE_SESSIONS = True

if ENVIRONMENT in ['test', 'production']:
    SECURE_SSL_REDIRECT = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'

    if ENVIRONMENT == 'production':
        CSRF_COOKIE_DOMAIN = '.gotitbingo.com'
        CSRF_TRUSTED_ORIGINS = ['https://gotitbingo.com']
        SECURE_HSTS_SECONDS = 31536000
        SECURE_HSTS_INCLUDE_SUBDOMAINS = True
        SECURE_HSTS_PRELOAD = True
    elif ENVIRONMENT == 'test':
        CSRF_COOKIE_DOMAIN = 'gotitbingo.hyperionhub.dev'
        CSRF_TRUSTED_ORIGINS = ['https://hyperionhub.dev']
        SECURE_HSTS_SECONDS = 3600  # 1 hour


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'axes',
    'widget_tweaks',
    'anymail',
    'bingo',
    'users',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.CheckPasswordResetMiddleware',
    'axes.middleware.AxesMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',
    'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'bingoCards.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bingoCards.wsgi.application'


# Database Configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config(f'{ENVIRONMENT.upper()}_DATABASE_NAME', default='db_name'),
        'USER': config(f'{ENVIRONMENT.upper()}_DATABASE_USER', default='db_user'),
        'PASSWORD': config(f'{ENVIRONMENT.upper()}_DATABASE_PASSWORD', default='db_password'),
        'HOST': config(f'{ENVIRONMENT.upper()}_DATABASE_HOST', default='localhost'),
        'PORT': config(f'{ENVIRONMENT.upper()}_DATABASE_PORT', default='5432'),
    }
}


# Password Validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        'OPTIONS': {
            'user_attributes': ('username', 'email', 'first_name', 'last_name'),
            'max_similarity': 0.7,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 10,
        }
    },
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}


# Authentication URLs
LOGIN_URL = 'users:login'
LOGIN_REDIRECT_URL = 'home'  # TODO: Update this
LOGOUT_REDIRECT_URL = 'users:login'


# Session Configuration
SESSION_COOKIE_AGE = 86400  # 24 hours
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SECURE = CSRF_COOKIE_SECURE
SESSION_COOKIE_SAMESITE = 'Lax'

if ENVIRONMENT in ['test', 'production']:
    SESSION_COOKIE_DOMAIN = CSRF_COOKIE_DOMAIN


# Email Configuration
EMAIL_BACKEND = 'anymail.backends.mailjet.EmailBackend'

# Anymail Configuration
ANYMAIL = {
    'MAILJET_API_KEY': config('MAILJET_API_KEY'),
    'MAILJET_SECRET_KEY': config('MAILJET_API_SECRET'),
}

DEFAULT_FROM_EMAIL = config('MAILJET_FROM_EMAIL', default='webmaster@localhost')
SERVER_EMAIL = DEFAULT_FROM_EMAIL  # Used for error notifications


# Authentication
AUTH_USER_MODEL = 'users.AppUser'


# Django Axes Configuration
AXES_FAILURE_LIMIT = 5
AXES_LOCK_OUT_AT_FAILURE = True
AXES_COOLOFF_TIME = lambda request: timedelta(hours=2)
AXES_LOCKOUT_TEMPLATE = 'users/lockout.html'


# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Chicago'
USE_TZ = True
USE_L10N = True


# Static Files
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default Primary Key Field Type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
